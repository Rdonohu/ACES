# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'G.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from Threads import Worker, ArduinoWorker

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1335, 915)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(40, 20, 1011, 721))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.StartButton = QtWidgets.QPushButton(self.frame)
        self.StartButton.setGeometry(QtCore.QRect(30, 580, 151, 91))
        self.StartButton.setMouseTracking(False)
        self.StartButton.setObjectName("StartButton")
        self.VehicleLock = QtWidgets.QPushButton(self.frame)
        self.VehicleLock.setGeometry(QtCore.QRect(740, 550, 151, 91))
        self.VehicleLock.setObjectName("VehicleLock")
        self.CentreConsole = QtWidgets.QTextBrowser(self.frame)
        self.CentreConsole.setGeometry(QtCore.QRect(30, 340, 211, 131))
        self.CentreConsole.setObjectName("CentreConsole")
        self.Speedometer = QtWidgets.QLCDNumber(self.frame)
        self.Speedometer.setEnabled(True)
        self.Speedometer.setGeometry(QtCore.QRect(400, 290, 181, 51))
        self.Speedometer.setStyleSheet("background-color: rgb(0, 85, 0);")
        self.Speedometer.setObjectName("Speedometer")
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setGeometry(QtCore.QRect(-10, 80, 1001, 621))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("range-rover-05.jpg"))
        self.label.setObjectName("label")
        self.label.raise_()
        self.StartButton.raise_()
        self.VehicleLock.raise_()
        self.CentreConsole.raise_()
        self.Speedometer.raise_()
        self.frame_2 = QtWidgets.QFrame(self.centralwidget)
        self.frame_2.setGeometry(QtCore.QRect(1040, 90, 211, 381))
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.AlarmTest = QtWidgets.QPushButton(self.frame_2)
        self.AlarmTest.setGeometry(QtCore.QRect(30, 280, 161, 81))
        self.AlarmTest.setObjectName("AlarmTest")
        self.ActivateLimp = QtWidgets.QPushButton(self.frame_2)
        self.ActivateLimp.setGeometry(QtCore.QRect(30, 180, 161, 81))
        self.ActivateLimp.setObjectName("ActivateLimp")
        self.PoliceNotifier = QtWidgets.QPushButton(self.frame_2)
        self.PoliceNotifier.setGeometry(QtCore.QRect(30, 90, 161, 81))
        self.PoliceNotifier.setObjectName("PoliceNotifier")
        self.OwnerNotifier = QtWidgets.QPushButton(self.frame_2)
        self.OwnerNotifier.setGeometry(QtCore.QRect(30, 0, 161, 81))
        self.OwnerNotifier.setObjectName("OwnerNotifier")
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)

        #Connecting slots 
        self.StartButton.clicked.connect(self.StartVehicle) 
        self.VehicleLock.clicked.connect(LockVehicle)
        self.AlarmTest.clicked.connect(ToggleAlarm)
        self.ActivateLimp.clicked.connect(ActivateLimpMode)
        self.PoliceNotifier.clicked.connect(NotifyPolice)
        self.OwnerNotifier.clicked.connect(NotifyOwner)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #create thread
        self.worker = Worker()
        #connect thread signal to slot
        self.worker.valueFound.connect(self.OnValueFound)
        #start thread
        self.worker.start()

        self.ArduinoWorker = ArduinoWorker()
        self.worker.valueFound.connect(self.ArduinoOnValueFound)
        self.ArduinoWorker.start()


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.StartButton.setText(_translate("MainWindow", "start vehicle"))
        self.VehicleLock.setText(_translate("MainWindow", "lock"))
        self.AlarmTest.setText(_translate("MainWindow", "toggle alarm"))
        self.ActivateLimp.setText(_translate("MainWindow", "Activate Limp Mode"))
        self.PoliceNotifier.setText(_translate("MainWindow", "Notify Police"))
        self.OwnerNotifier.setText(_translate("MainWindow", "Notify Owner"))
        
    def OnValueFound(self, value):
        self.Speedometer.display(value)

    def StartVehicle(self):
        self.worker.startThread()
    
    def ArduinoOnValueFound(self):
        self.ArduinoWorker.startThread()
        
def LockVehicle():
    print("LockVehicle")

def ToggleAlarm():
    print("weee wooo weeee wooo")

def NotifyPolice():
    print("police are on the way")

def NotifyOwner():
    print("The owner has been notified")

def ActivateLimpMode():
    print(" limp")



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
